// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: merge.proto at 437:1
package org.yeewoe.mopanet.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * �����Ķ�̬
 */
public final class PBTrdNearReq extends Message<PBTrdNearReq, PBTrdNearReq.Builder> {
  public static final ProtoAdapter<PBTrdNearReq> ADAPTER = new ProtoAdapter_PBTrdNearReq();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_MIN_DISTANCE = 0L;

  public static final Long DEFAULT_MAX_DISTANCE = 0L;

  public static final String DEFAULT_ADDR = "";

  public static final Integer DEFAULT_NUM = 0;

  public static final Integer DEFAULT_PURPOSE = 0;

  /**
   * 	���ĵ�
   */
  @WireField(
      tag = 1,
      adapter = "org.yeewoe.mopanet.protos.PBMapPostion#ADAPTER"
  )
  public final PBMapPostion center_loc;

  /**
   * 	ָ��������롣��λ��
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long min_distance;

  /**
   * 	ָ����Զ���롣��λ��
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long max_distance;

  /**
   * 	ָ���˾����ַ
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String addr;

  /**
   * optional	uint32			skip = 5;			//	����ǰ��ļ�¼��
   * 	���صļ�¼����Ĭ��100
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer num;

  /**
   * ��̬��Ŀ��
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer purpose;

  public PBTrdNearReq(PBMapPostion center_loc, Long min_distance, Long max_distance, String addr, Integer num, Integer purpose) {
    this(center_loc, min_distance, max_distance, addr, num, purpose, ByteString.EMPTY);
  }

  public PBTrdNearReq(PBMapPostion center_loc, Long min_distance, Long max_distance, String addr, Integer num, Integer purpose, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.center_loc = center_loc;
    this.min_distance = min_distance;
    this.max_distance = max_distance;
    this.addr = addr;
    this.num = num;
    this.purpose = purpose;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.center_loc = center_loc;
    builder.min_distance = min_distance;
    builder.max_distance = max_distance;
    builder.addr = addr;
    builder.num = num;
    builder.purpose = purpose;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PBTrdNearReq)) return false;
    PBTrdNearReq o = (PBTrdNearReq) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(center_loc, o.center_loc)
        && Internal.equals(min_distance, o.min_distance)
        && Internal.equals(max_distance, o.max_distance)
        && Internal.equals(addr, o.addr)
        && Internal.equals(num, o.num)
        && Internal.equals(purpose, o.purpose);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (center_loc != null ? center_loc.hashCode() : 0);
      result = result * 37 + (min_distance != null ? min_distance.hashCode() : 0);
      result = result * 37 + (max_distance != null ? max_distance.hashCode() : 0);
      result = result * 37 + (addr != null ? addr.hashCode() : 0);
      result = result * 37 + (num != null ? num.hashCode() : 0);
      result = result * 37 + (purpose != null ? purpose.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (center_loc != null) builder.append(", center_loc=").append(center_loc);
    if (min_distance != null) builder.append(", min_distance=").append(min_distance);
    if (max_distance != null) builder.append(", max_distance=").append(max_distance);
    if (addr != null) builder.append(", addr=").append(addr);
    if (num != null) builder.append(", num=").append(num);
    if (purpose != null) builder.append(", purpose=").append(purpose);
    return builder.replace(0, 2, "PBTrdNearReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<PBTrdNearReq, Builder> {
    public PBMapPostion center_loc;

    public Long min_distance;

    public Long max_distance;

    public String addr;

    public Integer num;

    public Integer purpose;

    public Builder() {
    }

    /**
     * 	���ĵ�
     */
    public Builder center_loc(PBMapPostion center_loc) {
      this.center_loc = center_loc;
      return this;
    }

    /**
     * 	ָ��������롣��λ��
     */
    public Builder min_distance(Long min_distance) {
      this.min_distance = min_distance;
      return this;
    }

    /**
     * 	ָ����Զ���롣��λ��
     */
    public Builder max_distance(Long max_distance) {
      this.max_distance = max_distance;
      return this;
    }

    /**
     * 	ָ���˾����ַ
     */
    public Builder addr(String addr) {
      this.addr = addr;
      return this;
    }

    /**
     * optional	uint32			skip = 5;			//	����ǰ��ļ�¼��
     * 	���صļ�¼����Ĭ��100
     */
    public Builder num(Integer num) {
      this.num = num;
      return this;
    }

    /**
     * ��̬��Ŀ��
     */
    public Builder purpose(Integer purpose) {
      this.purpose = purpose;
      return this;
    }

    @Override
    public PBTrdNearReq build() {
      return new PBTrdNearReq(center_loc, min_distance, max_distance, addr, num, purpose, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_PBTrdNearReq extends ProtoAdapter<PBTrdNearReq> {
    ProtoAdapter_PBTrdNearReq() {
      super(FieldEncoding.LENGTH_DELIMITED, PBTrdNearReq.class);
    }

    @Override
    public int encodedSize(PBTrdNearReq value) {
      return (value.center_loc != null ? PBMapPostion.ADAPTER.encodedSizeWithTag(1, value.center_loc) : 0)
          + (value.min_distance != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.min_distance) : 0)
          + (value.max_distance != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.max_distance) : 0)
          + (value.addr != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.addr) : 0)
          + (value.num != null ? ProtoAdapter.UINT32.encodedSizeWithTag(6, value.num) : 0)
          + (value.purpose != null ? ProtoAdapter.INT32.encodedSizeWithTag(5, value.purpose) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, PBTrdNearReq value) throws IOException {
      if (value.center_loc != null) PBMapPostion.ADAPTER.encodeWithTag(writer, 1, value.center_loc);
      if (value.min_distance != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.min_distance);
      if (value.max_distance != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.max_distance);
      if (value.addr != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.addr);
      if (value.num != null) ProtoAdapter.UINT32.encodeWithTag(writer, 6, value.num);
      if (value.purpose != null) ProtoAdapter.INT32.encodeWithTag(writer, 5, value.purpose);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public PBTrdNearReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.center_loc(PBMapPostion.ADAPTER.decode(reader)); break;
          case 2: builder.min_distance(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.max_distance(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.addr(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.num(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.purpose(ProtoAdapter.INT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public PBTrdNearReq redact(PBTrdNearReq value) {
      Builder builder = value.newBuilder();
      if (builder.center_loc != null) builder.center_loc = PBMapPostion.ADAPTER.redact(builder.center_loc);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
