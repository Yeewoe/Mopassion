// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: merge.proto at 86:1
package org.yeewoe.mopanet.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class PBFileDownloadResult extends Message<PBFileDownloadResult, PBFileDownloadResult.Builder> {
  public static final ProtoAdapter<PBFileDownloadResult> ADAPTER = new ProtoAdapter_PBFileDownloadResult();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_URL = "";

  /**
   * ?????url???????????????��????
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String url;

  public PBFileDownloadResult(String url) {
    this(url, ByteString.EMPTY);
  }

  public PBFileDownloadResult(String url, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.url = url;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.url = url;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PBFileDownloadResult)) return false;
    PBFileDownloadResult o = (PBFileDownloadResult) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(url, o.url);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (url != null ? url.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (url != null) builder.append(", url=").append(url);
    return builder.replace(0, 2, "PBFileDownloadResult{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<PBFileDownloadResult, Builder> {
    public String url;

    public Builder() {
    }

    /**
     * ?????url???????????????��????
     */
    public Builder url(String url) {
      this.url = url;
      return this;
    }

    @Override
    public PBFileDownloadResult build() {
      return new PBFileDownloadResult(url, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_PBFileDownloadResult extends ProtoAdapter<PBFileDownloadResult> {
    ProtoAdapter_PBFileDownloadResult() {
      super(FieldEncoding.LENGTH_DELIMITED, PBFileDownloadResult.class);
    }

    @Override
    public int encodedSize(PBFileDownloadResult value) {
      return (value.url != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.url) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, PBFileDownloadResult value) throws IOException {
      if (value.url != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.url);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public PBFileDownloadResult decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.url(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public PBFileDownloadResult redact(PBFileDownloadResult value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
