// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: merge.proto at 495:1
package org.yeewoe.mopanet.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class PBUserFilter extends Message<PBUserFilter, PBUserFilter.Builder> {
  public static final ProtoAdapter<PBUserFilter> ADAPTER = new ProtoAdapter_PBUserFilter();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_NAME = 0;

  public static final Integer DEFAULT_PHOTO = 0;

  public static final Integer DEFAULT_THUMB = 0;

  /**
   * optional	int32		uid		= 1;
   * optional	int32		account	= 2;
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer name;

  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer photo;

  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer thumb;

  public PBUserFilter(Integer name, Integer photo, Integer thumb) {
    this(name, photo, thumb, ByteString.EMPTY);
  }

  public PBUserFilter(Integer name, Integer photo, Integer thumb, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.name = name;
    this.photo = photo;
    this.thumb = thumb;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.name = name;
    builder.photo = photo;
    builder.thumb = thumb;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PBUserFilter)) return false;
    PBUserFilter o = (PBUserFilter) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(name, o.name)
        && Internal.equals(photo, o.photo)
        && Internal.equals(thumb, o.thumb);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (photo != null ? photo.hashCode() : 0);
      result = result * 37 + (thumb != null ? thumb.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (name != null) builder.append(", name=").append(name);
    if (photo != null) builder.append(", photo=").append(photo);
    if (thumb != null) builder.append(", thumb=").append(thumb);
    return builder.replace(0, 2, "PBUserFilter{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<PBUserFilter, Builder> {
    public Integer name;

    public Integer photo;

    public Integer thumb;

    public Builder() {
    }

    /**
     * optional	int32		uid		= 1;
     * optional	int32		account	= 2;
     */
    public Builder name(Integer name) {
      this.name = name;
      return this;
    }

    public Builder photo(Integer photo) {
      this.photo = photo;
      return this;
    }

    public Builder thumb(Integer thumb) {
      this.thumb = thumb;
      return this;
    }

    @Override
    public PBUserFilter build() {
      return new PBUserFilter(name, photo, thumb, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_PBUserFilter extends ProtoAdapter<PBUserFilter> {
    ProtoAdapter_PBUserFilter() {
      super(FieldEncoding.LENGTH_DELIMITED, PBUserFilter.class);
    }

    @Override
    public int encodedSize(PBUserFilter value) {
      return (value.name != null ? ProtoAdapter.INT32.encodedSizeWithTag(3, value.name) : 0)
          + (value.photo != null ? ProtoAdapter.INT32.encodedSizeWithTag(10, value.photo) : 0)
          + (value.thumb != null ? ProtoAdapter.INT32.encodedSizeWithTag(11, value.thumb) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, PBUserFilter value) throws IOException {
      if (value.name != null) ProtoAdapter.INT32.encodeWithTag(writer, 3, value.name);
      if (value.photo != null) ProtoAdapter.INT32.encodeWithTag(writer, 10, value.photo);
      if (value.thumb != null) ProtoAdapter.INT32.encodeWithTag(writer, 11, value.thumb);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public PBUserFilter decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 3: builder.name(ProtoAdapter.INT32.decode(reader)); break;
          case 10: builder.photo(ProtoAdapter.INT32.decode(reader)); break;
          case 11: builder.thumb(ProtoAdapter.INT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public PBUserFilter redact(PBUserFilter value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
