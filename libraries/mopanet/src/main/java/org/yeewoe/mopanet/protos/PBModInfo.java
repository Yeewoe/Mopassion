// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: merge.proto at 307:1
package org.yeewoe.mopanet.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class PBModInfo extends Message<PBModInfo, PBModInfo.Builder> {
  public static final ProtoAdapter<PBModInfo> ADAPTER = new ProtoAdapter_PBModInfo();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_CLIENT = 0L;

  public static final Long DEFAULT_RPC = 0L;

  public static final Long DEFAULT_MTUNNEL = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long client;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long rpc;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long mtunnel;

  public PBModInfo(Long client, Long rpc, Long mtunnel) {
    this(client, rpc, mtunnel, ByteString.EMPTY);
  }

  public PBModInfo(Long client, Long rpc, Long mtunnel, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.client = client;
    this.rpc = rpc;
    this.mtunnel = mtunnel;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.client = client;
    builder.rpc = rpc;
    builder.mtunnel = mtunnel;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PBModInfo)) return false;
    PBModInfo o = (PBModInfo) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(client, o.client)
        && Internal.equals(rpc, o.rpc)
        && Internal.equals(mtunnel, o.mtunnel);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (client != null ? client.hashCode() : 0);
      result = result * 37 + (rpc != null ? rpc.hashCode() : 0);
      result = result * 37 + (mtunnel != null ? mtunnel.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (client != null) builder.append(", client=").append(client);
    if (rpc != null) builder.append(", rpc=").append(rpc);
    if (mtunnel != null) builder.append(", mtunnel=").append(mtunnel);
    return builder.replace(0, 2, "PBModInfo{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<PBModInfo, Builder> {
    public Long client;

    public Long rpc;

    public Long mtunnel;

    public Builder() {
    }

    public Builder client(Long client) {
      this.client = client;
      return this;
    }

    public Builder rpc(Long rpc) {
      this.rpc = rpc;
      return this;
    }

    public Builder mtunnel(Long mtunnel) {
      this.mtunnel = mtunnel;
      return this;
    }

    @Override
    public PBModInfo build() {
      return new PBModInfo(client, rpc, mtunnel, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_PBModInfo extends ProtoAdapter<PBModInfo> {
    ProtoAdapter_PBModInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, PBModInfo.class);
    }

    @Override
    public int encodedSize(PBModInfo value) {
      return (value.client != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.client) : 0)
          + (value.rpc != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.rpc) : 0)
          + (value.mtunnel != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.mtunnel) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, PBModInfo value) throws IOException {
      if (value.client != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.client);
      if (value.rpc != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.rpc);
      if (value.mtunnel != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.mtunnel);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public PBModInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.client(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.rpc(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.mtunnel(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public PBModInfo redact(PBModInfo value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
