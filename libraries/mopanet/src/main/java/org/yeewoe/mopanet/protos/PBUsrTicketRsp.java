// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: merge.proto at 610:1
package org.yeewoe.mopanet.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class PBUsrTicketRsp extends Message<PBUsrTicketRsp, PBUsrTicketRsp.Builder> {
  public static final ProtoAdapter<PBUsrTicketRsp> ADAPTER = new ProtoAdapter_PBUsrTicketRsp();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_RESULT = 0;

  public static final Long DEFAULT_UID = 0L;

  /**
   * 	��¼�������Ϊ0��ʾʧ��
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer result;

  /**
   * 	�û�id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long uid;

  public PBUsrTicketRsp(Integer result, Long uid) {
    this(result, uid, ByteString.EMPTY);
  }

  public PBUsrTicketRsp(Integer result, Long uid, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.result = result;
    this.uid = uid;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.result = result;
    builder.uid = uid;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PBUsrTicketRsp)) return false;
    PBUsrTicketRsp o = (PBUsrTicketRsp) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(result, o.result)
        && Internal.equals(uid, o.uid);
  }

  @Override
  public int hashCode() {
    int result_ = super.hashCode;
    if (result_ == 0) {
      result_ = unknownFields().hashCode();
      result_ = result_ * 37 + (result != null ? result.hashCode() : 0);
      result_ = result_ * 37 + (uid != null ? uid.hashCode() : 0);
      super.hashCode = result_;
    }
    return result_;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (result != null) builder.append(", result=").append(result);
    if (uid != null) builder.append(", uid=").append(uid);
    return builder.replace(0, 2, "PBUsrTicketRsp{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<PBUsrTicketRsp, Builder> {
    public Integer result;

    public Long uid;

    public Builder() {
    }

    /**
     * 	��¼�������Ϊ0��ʾʧ��
     */
    public Builder result(Integer result) {
      this.result = result;
      return this;
    }

    /**
     * 	�û�id
     */
    public Builder uid(Long uid) {
      this.uid = uid;
      return this;
    }

    @Override
    public PBUsrTicketRsp build() {
      return new PBUsrTicketRsp(result, uid, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_PBUsrTicketRsp extends ProtoAdapter<PBUsrTicketRsp> {
    ProtoAdapter_PBUsrTicketRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, PBUsrTicketRsp.class);
    }

    @Override
    public int encodedSize(PBUsrTicketRsp value) {
      return (value.result != null ? ProtoAdapter.INT32.encodedSizeWithTag(1, value.result) : 0)
          + (value.uid != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.uid) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, PBUsrTicketRsp value) throws IOException {
      if (value.result != null) ProtoAdapter.INT32.encodeWithTag(writer, 1, value.result);
      if (value.uid != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.uid);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public PBUsrTicketRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.result(ProtoAdapter.INT32.decode(reader)); break;
          case 2: builder.uid(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public PBUsrTicketRsp redact(PBUsrTicketRsp value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
