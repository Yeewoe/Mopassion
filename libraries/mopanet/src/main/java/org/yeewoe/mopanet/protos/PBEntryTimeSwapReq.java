// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: merge.proto at 38:1
package org.yeewoe.mopanet.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * �������ĵ�һ��������������ʱ�佻����
 */
public final class PBEntryTimeSwapReq extends Message<PBEntryTimeSwapReq, PBEntryTimeSwapReq.Builder> {
  public static final ProtoAdapter<PBEntryTimeSwapReq> ADAPTER = new ProtoAdapter_PBEntryTimeSwapReq();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_CLT_TIME = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64",
      label = WireField.Label.REQUIRED
  )
  public final Long clt_time;

  public PBEntryTimeSwapReq(Long clt_time) {
    this(clt_time, ByteString.EMPTY);
  }

  public PBEntryTimeSwapReq(Long clt_time, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.clt_time = clt_time;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.clt_time = clt_time;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PBEntryTimeSwapReq)) return false;
    PBEntryTimeSwapReq o = (PBEntryTimeSwapReq) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(clt_time, o.clt_time);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (clt_time != null ? clt_time.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (clt_time != null) builder.append(", clt_time=").append(clt_time);
    return builder.replace(0, 2, "PBEntryTimeSwapReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<PBEntryTimeSwapReq, Builder> {
    public Long clt_time;

    public Builder() {
    }

    public Builder clt_time(Long clt_time) {
      this.clt_time = clt_time;
      return this;
    }

    @Override
    public PBEntryTimeSwapReq build() {
      if (clt_time == null) {
        throw Internal.missingRequiredFields(clt_time, "clt_time");
      }
      return new PBEntryTimeSwapReq(clt_time, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_PBEntryTimeSwapReq extends ProtoAdapter<PBEntryTimeSwapReq> {
    ProtoAdapter_PBEntryTimeSwapReq() {
      super(FieldEncoding.LENGTH_DELIMITED, PBEntryTimeSwapReq.class);
    }

    @Override
    public int encodedSize(PBEntryTimeSwapReq value) {
      return ProtoAdapter.UINT64.encodedSizeWithTag(1, value.clt_time)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, PBEntryTimeSwapReq value) throws IOException {
      ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.clt_time);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public PBEntryTimeSwapReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.clt_time(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public PBEntryTimeSwapReq redact(PBEntryTimeSwapReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
