// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: merge.proto at 600:1
package org.yeewoe.mopanet.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * ticket��¼
 */
public final class PBUsrTicketReq extends Message<PBUsrTicketReq, PBUsrTicketReq.Builder> {
  public static final ProtoAdapter<PBUsrTicketReq> ADAPTER = new ProtoAdapter_PBUsrTicketReq();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_UID = 0L;

  public static final String DEFAULT_VERSION = "";

  public static final String DEFAULT_SEED = "";

  public static final Integer DEFAULT_ALGO = 0;

  public static final ByteString DEFAULT_VERIFY = ByteString.EMPTY;

  /**
   * 	���ٵ�¼���û�uid
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64",
      label = WireField.Label.REQUIRED
  )
  public final Long uid;

  /**
   * 	required	bytes		ticket = 2;		//	���ٵ�¼��Ʊ��
   * 	�ͻ���app�汾��
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String version;

  /**
   * 	У������
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String seed;

  /**
   * 	У���㷨.Ĭ��MD5
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer algo;

  /**
   * 	У������
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#BYTES"
  )
  public final ByteString verify;

  public PBUsrTicketReq(Long uid, String version, String seed, Integer algo, ByteString verify) {
    this(uid, version, seed, algo, verify, ByteString.EMPTY);
  }

  public PBUsrTicketReq(Long uid, String version, String seed, Integer algo, ByteString verify, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.uid = uid;
    this.version = version;
    this.seed = seed;
    this.algo = algo;
    this.verify = verify;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.uid = uid;
    builder.version = version;
    builder.seed = seed;
    builder.algo = algo;
    builder.verify = verify;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PBUsrTicketReq)) return false;
    PBUsrTicketReq o = (PBUsrTicketReq) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(uid, o.uid)
        && Internal.equals(version, o.version)
        && Internal.equals(seed, o.seed)
        && Internal.equals(algo, o.algo)
        && Internal.equals(verify, o.verify);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (uid != null ? uid.hashCode() : 0);
      result = result * 37 + (version != null ? version.hashCode() : 0);
      result = result * 37 + (seed != null ? seed.hashCode() : 0);
      result = result * 37 + (algo != null ? algo.hashCode() : 0);
      result = result * 37 + (verify != null ? verify.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (uid != null) builder.append(", uid=").append(uid);
    if (version != null) builder.append(", version=").append(version);
    if (seed != null) builder.append(", seed=").append(seed);
    if (algo != null) builder.append(", algo=").append(algo);
    if (verify != null) builder.append(", verify=").append(verify);
    return builder.replace(0, 2, "PBUsrTicketReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<PBUsrTicketReq, Builder> {
    public Long uid;

    public String version;

    public String seed;

    public Integer algo;

    public ByteString verify;

    public Builder() {
    }

    /**
     * 	���ٵ�¼���û�uid
     */
    public Builder uid(Long uid) {
      this.uid = uid;
      return this;
    }

    /**
     * 	required	bytes		ticket = 2;		//	���ٵ�¼��Ʊ��
     * 	�ͻ���app�汾��
     */
    public Builder version(String version) {
      this.version = version;
      return this;
    }

    /**
     * 	У������
     */
    public Builder seed(String seed) {
      this.seed = seed;
      return this;
    }

    /**
     * 	У���㷨.Ĭ��MD5
     */
    public Builder algo(Integer algo) {
      this.algo = algo;
      return this;
    }

    /**
     * 	У������
     */
    public Builder verify(ByteString verify) {
      this.verify = verify;
      return this;
    }

    @Override
    public PBUsrTicketReq build() {
      if (uid == null) {
        throw Internal.missingRequiredFields(uid, "uid");
      }
      return new PBUsrTicketReq(uid, version, seed, algo, verify, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_PBUsrTicketReq extends ProtoAdapter<PBUsrTicketReq> {
    ProtoAdapter_PBUsrTicketReq() {
      super(FieldEncoding.LENGTH_DELIMITED, PBUsrTicketReq.class);
    }

    @Override
    public int encodedSize(PBUsrTicketReq value) {
      return ProtoAdapter.UINT64.encodedSizeWithTag(1, value.uid)
          + (value.version != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.version) : 0)
          + (value.seed != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.seed) : 0)
          + (value.algo != null ? ProtoAdapter.INT32.encodedSizeWithTag(5, value.algo) : 0)
          + (value.verify != null ? ProtoAdapter.BYTES.encodedSizeWithTag(6, value.verify) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, PBUsrTicketReq value) throws IOException {
      ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.uid);
      if (value.version != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.version);
      if (value.seed != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.seed);
      if (value.algo != null) ProtoAdapter.INT32.encodeWithTag(writer, 5, value.algo);
      if (value.verify != null) ProtoAdapter.BYTES.encodeWithTag(writer, 6, value.verify);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public PBUsrTicketReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.uid(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.version(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.seed(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.algo(ProtoAdapter.INT32.decode(reader)); break;
          case 6: builder.verify(ProtoAdapter.BYTES.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public PBUsrTicketReq redact(PBUsrTicketReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
