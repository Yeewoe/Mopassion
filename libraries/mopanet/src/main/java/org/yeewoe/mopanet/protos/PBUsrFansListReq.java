// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: merge.proto at 691:1
package org.yeewoe.mopanet.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * ��ȡ��˿�б�
 */
public final class PBUsrFansListReq extends Message<PBUsrFansListReq, PBUsrFansListReq.Builder> {
  public static final ProtoAdapter<PBUsrFansListReq> ADAPTER = new ProtoAdapter_PBUsrFansListReq();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_SKIP = 0;

  public static final Integer DEFAULT_LIMIT = 0;

  /**
   * ��ʼλ��
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer skip;

  /**
   * ��ȡ����,���200
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer limit;

  public PBUsrFansListReq(Integer skip, Integer limit) {
    this(skip, limit, ByteString.EMPTY);
  }

  public PBUsrFansListReq(Integer skip, Integer limit, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.skip = skip;
    this.limit = limit;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.skip = skip;
    builder.limit = limit;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PBUsrFansListReq)) return false;
    PBUsrFansListReq o = (PBUsrFansListReq) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(skip, o.skip)
        && Internal.equals(limit, o.limit);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (skip != null ? skip.hashCode() : 0);
      result = result * 37 + (limit != null ? limit.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (skip != null) builder.append(", skip=").append(skip);
    if (limit != null) builder.append(", limit=").append(limit);
    return builder.replace(0, 2, "PBUsrFansListReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<PBUsrFansListReq, Builder> {
    public Integer skip;

    public Integer limit;

    public Builder() {
    }

    /**
     * ��ʼλ��
     */
    public Builder skip(Integer skip) {
      this.skip = skip;
      return this;
    }

    /**
     * ��ȡ����,���200
     */
    public Builder limit(Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public PBUsrFansListReq build() {
      return new PBUsrFansListReq(skip, limit, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_PBUsrFansListReq extends ProtoAdapter<PBUsrFansListReq> {
    ProtoAdapter_PBUsrFansListReq() {
      super(FieldEncoding.LENGTH_DELIMITED, PBUsrFansListReq.class);
    }

    @Override
    public int encodedSize(PBUsrFansListReq value) {
      return (value.skip != null ? ProtoAdapter.INT32.encodedSizeWithTag(1, value.skip) : 0)
          + (value.limit != null ? ProtoAdapter.INT32.encodedSizeWithTag(2, value.limit) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, PBUsrFansListReq value) throws IOException {
      if (value.skip != null) ProtoAdapter.INT32.encodeWithTag(writer, 1, value.skip);
      if (value.limit != null) ProtoAdapter.INT32.encodeWithTag(writer, 2, value.limit);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public PBUsrFansListReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.skip(ProtoAdapter.INT32.decode(reader)); break;
          case 2: builder.limit(ProtoAdapter.INT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public PBUsrFansListReq redact(PBUsrFansListReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
