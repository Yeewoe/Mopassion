// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: merge.proto at 42:1
package org.yeewoe.mopanet.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class PBEntryTimeSwapRsp extends Message<PBEntryTimeSwapRsp, PBEntryTimeSwapRsp.Builder> {
  public static final ProtoAdapter<PBEntryTimeSwapRsp> ADAPTER = new ProtoAdapter_PBEntryTimeSwapRsp();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_RESULT = 0;

  public static final Long DEFAULT_CLT_TIME = 0L;

  public static final Long DEFAULT_SRV_TIME = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer result;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64",
      label = WireField.Label.REQUIRED
  )
  public final Long clt_time;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64",
      label = WireField.Label.REQUIRED
  )
  public final Long srv_time;

  public PBEntryTimeSwapRsp(Integer result, Long clt_time, Long srv_time) {
    this(result, clt_time, srv_time, ByteString.EMPTY);
  }

  public PBEntryTimeSwapRsp(Integer result, Long clt_time, Long srv_time, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.result = result;
    this.clt_time = clt_time;
    this.srv_time = srv_time;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.result = result;
    builder.clt_time = clt_time;
    builder.srv_time = srv_time;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PBEntryTimeSwapRsp)) return false;
    PBEntryTimeSwapRsp o = (PBEntryTimeSwapRsp) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(result, o.result)
        && Internal.equals(clt_time, o.clt_time)
        && Internal.equals(srv_time, o.srv_time);
  }

  @Override
  public int hashCode() {
    int result_ = super.hashCode;
    if (result_ == 0) {
      result_ = unknownFields().hashCode();
      result_ = result_ * 37 + (result != null ? result.hashCode() : 0);
      result_ = result_ * 37 + (clt_time != null ? clt_time.hashCode() : 0);
      result_ = result_ * 37 + (srv_time != null ? srv_time.hashCode() : 0);
      super.hashCode = result_;
    }
    return result_;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (result != null) builder.append(", result=").append(result);
    if (clt_time != null) builder.append(", clt_time=").append(clt_time);
    if (srv_time != null) builder.append(", srv_time=").append(srv_time);
    return builder.replace(0, 2, "PBEntryTimeSwapRsp{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<PBEntryTimeSwapRsp, Builder> {
    public Integer result;

    public Long clt_time;

    public Long srv_time;

    public Builder() {
    }

    public Builder result(Integer result) {
      this.result = result;
      return this;
    }

    public Builder clt_time(Long clt_time) {
      this.clt_time = clt_time;
      return this;
    }

    public Builder srv_time(Long srv_time) {
      this.srv_time = srv_time;
      return this;
    }

    @Override
    public PBEntryTimeSwapRsp build() {
      if (clt_time == null
          || srv_time == null) {
        throw Internal.missingRequiredFields(clt_time, "clt_time",
            srv_time, "srv_time");
      }
      return new PBEntryTimeSwapRsp(result, clt_time, srv_time, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_PBEntryTimeSwapRsp extends ProtoAdapter<PBEntryTimeSwapRsp> {
    ProtoAdapter_PBEntryTimeSwapRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, PBEntryTimeSwapRsp.class);
    }

    @Override
    public int encodedSize(PBEntryTimeSwapRsp value) {
      return (value.result != null ? ProtoAdapter.INT32.encodedSizeWithTag(1, value.result) : 0)
          + ProtoAdapter.UINT64.encodedSizeWithTag(2, value.clt_time)
          + ProtoAdapter.UINT64.encodedSizeWithTag(3, value.srv_time)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, PBEntryTimeSwapRsp value) throws IOException {
      if (value.result != null) ProtoAdapter.INT32.encodeWithTag(writer, 1, value.result);
      ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.clt_time);
      ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.srv_time);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public PBEntryTimeSwapRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.result(ProtoAdapter.INT32.decode(reader)); break;
          case 2: builder.clt_time(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.srv_time(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public PBEntryTimeSwapRsp redact(PBEntryTimeSwapRsp value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
